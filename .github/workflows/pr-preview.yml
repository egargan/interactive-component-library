name: Preview PR Storybook and package

on:
  pull_request:
    types: [labeled]

env:
  TAG_NAME: ${{ inputs.tag || github.ref_name }}

jobs:
  publish-package:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    outputs:
      version: ${{ steps.publish.outputs.version }}

    steps:
      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "18.x"
          registry-url: "https://registry.npmjs.org"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Create minor prerelease version (e.g. v1.1.0-rc.0, from current version v1.0.0)
      - id: publish
        name: Update package.json version
        run: echo "version=$(npm version preminor --preid 'rc')" >> "$GITHUB_OUTPUT"

      - name: Build
        run: pnpm build:lib

      # - name: Publish to NPM
      #   run: npm publish --access public
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  deploy-storybook:
    runs-on: ubuntu-latest

    needs: publish-package

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "18.x"
          registry-url: "https://registry.npmjs.org"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Print new version
        run: echo "${{needs.publish-package.outputs.version}} (PR #${{github.event.number}})"

      - name: Build Storybook
        run: STORYBOOK_VERSION="${{needs.publish-package.outputs.version}} (PR #${{github.event.number}})" pnpm build
