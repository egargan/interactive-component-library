name: Preview PR Storybook and package

on:
  pull_request:
    types: [labeled]

env:
  TAG_NAME: ${{ inputs.tag || github.ref_name }}

jobs:
  publish-package:
    if: github.event.label.name == 'Preview'

    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      pull-requests: write

    outputs:
      version: ${{ steps.publish.outputs.version }}

    steps:
      - name: Show labels
        run: |
          echo '${{ toJSON(github.event.label.name) }}'

      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "18.x"
          registry-url: "https://registry.npmjs.org"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Create short SHA for latest commit
        run: |
          echo "short_sha=$(git rev-parse --short '${{github.event.pull_request.head.sha}}')" >> "$GITHUB_ENV"

      # Create minor prerelease version (e.g. v1.1.0-rc.0, from current version v1.0.0)
      - id: publish
        name: Update package.json version
        run: |
          git config --global user.email "<41898282+github-actions[bot]@users.noreply.github.com>"
          git config --global user.name "github-actions[bot]"
          echo "version=$(npm version preminor --preid rc.${short_sha})" >> "$GITHUB_OUTPUT"

      - name: Build
        run: pnpm build:lib

      # - name: Publish to NPM
      #   run: npm publish --access public
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Print new version + URL
        run: |
          echo '${{steps.publish.outputs.version}} (#${{github.event.pull_request.number}})'
          echo '${{github.event.pull_request.html_url}}'

      - name: Build Storybook
        run: STORYBOOK_VERSION='${{steps.publish.outputs.version}} (#${{github.event.pull_request.number}})' STORYBOOK_VERSION_URL='${{github.event.pull_request.html_url}}' pnpm build

      - uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Preview deployed! ${{steps.publish.outputs.version}}'
            })
